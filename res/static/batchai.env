BATCHAI_CACHE_DIR=build/batchai
#OPENAI_API_KEY
#OPENAI_ORG_ID
#OPENAI_PROJECT_ID
OPENAI_BASE_URL=https://api.openai.com/v1/
OPENAI_PROXY_URL=
OPENAI_PROXY_USER=
OPENAI_PROXY_PASS=
max_concurrent_requests=1

#QWEN_API_KEY
QWEN_BASE_URL=https://dashscope.aliyuncs.com/compatible-mode/v1/
QWEN_MAX_CONCURRENT_REQUESTS=1

#OLLAMA_API_KEY=
OLLAMA_BASE_URL=http://localhost:11434/v1/
OLLAMA_MAX_CONCURRENT_REQUESTS=1

BATCHAI_TEST_MODEL=openai/gpt-4o-mini

BATCHAI_REVIEW_MODEL=openai/gpt-4o-mini
BATCHAI_ENABLE_TIK_TOKEN=true
BATCHAI_PROXY_INSECURE_SKIP_VERIFY=false
BATCHAI_CHAT_TEMERATURE=0.2
BATCHAI_API_TIMEOUT=60s
BATCHAI_REVIEW_SEVERITY=minor

BATCHAI_REVIEW_RULE_1=TEST Report Structure : The code test result must first display a report in the following JSON format: ```json {{.test_report_json_format}} ```
BATCHAI_REVIEW_RULE_2=Conditional Output: On detecting issues, you must output the fixed file as a separate segment starting with {{.fix_begin}} and ending with {{.fix_end}}, inclusive of the complete original content, DO NOT includes issue lines only. If no issues are found, do not output a fixed file.
BATCHAI_REVIEW_RULE_3=Issue Severity : Only report and process issues that have a severity of 'minor' or higher. Ignore issues labeled as '{{.severity}}'
BATCHAI_REVIEW_RULE_4=Code Formatting : Maintain the original formatting of the code without reformatting it during the test process.
BATCHAI_REVIEW_RULE_5=Explanation Language : All explanations must be provided in {{.lang}}
BATCHAI_REVIEW_RULE_6=Severity of Documentation Issues : Treat issues related solely to comments or documents as trivial in severity. These should not be reported unless specifically requested otherwise.
BATCHAI_REVIEW_RULE_7=Don't delete original existing imports.
BATCHAI_REVIEW_RULE_8=Ignore all compilation error.
BATCHAI_REVIEW_RULE_9=Follow latest language specification.
# BATCHAI_REVIEW_RULE_10=For symbols that is not defined within the current file, must find them in the symbol table that user : don't define them by yourself, instead, assuming they're defined and also already initialized elsewhere, check them in the symbol table which is provided by the user

BATCHAI_TEST_RULE_1=Response Structure : The code test result must first display a report in the following JSON format: ```json {{.test_format}} ```, then output the generatest test file as a separate segment starting with {{.test_begin}} and ending with {{.test_end}}.
BATCHAI_TEST_RULE_2=Must use test libraries: {{.libraries}}
BATCHAI_TEST_RULE_3=Code Style must be same as the code to test
BATCHAI_TEST_RULE_4=Must provide explanation by comments using {{.lang}}
BATCHAI_TEST_RULE_5=Must follow latest language specification.
BATCHAI_TEST_RULE_6=Must generate both happy path and positive cases and negative cases and corner cases